#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          };
          hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
          };
        };

        conditional_layers {
          compatible = "zmk,conditional-layers";
          tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ┌───────────┬───┬───┬───┬───┬───┐   ┌───┬───┬───┬───┬───┬──────┐
// │ TAB/HYPER │ Q │ W │ E │ R │ T │   │ Y │ U │ I │ O │ P │ BSPC │
// ├───────────┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼──────┤
// │   SHIFT   │ A │ S │ D │ F │ G │   │ H │ J │ K │ L │ ; │  '   │
// ├───────────┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼──────┤
// │   CTRL    │ Z │ X │ C │ V │ B │   │ N │ M │ , │ . │ / │ ESC  │
// └───────────┴───┴───┼───┼───┼───┤   ├───┼───┼───┼───┴───┴──────┘
//                     │CMD│ ▼ │SPC│   │RET│ ▲ │ALT│
//                     └───┴───┴───┘   └───┴───┴───┘
                        bindings = <
   &tp LC(LS(LA(LGUI))) TAB  &kp Q         &kp W         &kp E        &kp R        &kp T        &kp Y    &kp U        &kp I        &kp O         &kp P         &kp BSPC
   &kp LSHFT                 &hm LSHFT A   &hm LCTRL S   &hm LALT D   &hm LGUI F   &kp G        &hm RGUI H    &hm RALT J   &hm RCTRL K   &hm RSHFT L   &kp SEMI  &kp SQT
   &kp LCTRL                 &kp Z         &kp X         &kp C        &kp V        &kp B        &kp N    &kp M        &kp COMMA    &kp DOT       &kp FSLH      &kp ESC
                                                         &kp LGUI     &mo 1        &kp SPACE    &kp RET  &mo 2        &kp LALT
                        >;
                };

                layer_below {
// ┌───────────┬───┬───┬───┬───┬───┐   ┌───┬───┬───┬───┬───┬──────┐
// │ TAB/HYPER │ 1 │ 2 │ 3 │ 4 │ 5 │   │ 6 │ 7 │ 8 │ 9 │ 0 │  \   │
// ├───────────┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼──────┤
// │   SHIFT   │ ! │ @ │ # │ $ │ % │   │ ^ │ & │ * │ ( │ ) │  |   │
// ├───────────┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼──────┤
// │   CTRL    │ - │ = │ ~ │ { │ } │   │ _ │ + │ ` │ [ │ ] │ ESC  │
// └───────────┴───┴───┼───┼───┼───┤   ├───┼───┼───┼───┴───┴──────┘
//                     │CMD│ ■ │SPC│   │RET│ ▲ │ALT│
//                     └───┴───┴───┘   └───┴───┴───┘

                        bindings = <
   &trans  &kp N1     &kp N2     &kp N3     &kp N4    &kp N5       &kp N6     &kp N7     &kp N8     &kp N9    &kp N0    &kp BSLH
   &trans  &kp EXCL   &kp AT     &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp STAR   &kp LPAR  &kp RPAR  &kp PIPE
   &trans  &kp MINUS  &kp EQUAL  &kp TILDE  &kp LBRC  &kp RBRC     &kp UNDER  &kp PLUS   &kp GRAVE  &kp LBKT  &kp RBKT  &trans
                                 &trans     &trans    &trans       &trans     &trans     &trans
                        >;
                };

                layer_above {
// ┌───────────┬──────┬──────┬───────┬───────┬─────┐   ┌─────┬───────────┬──────┬───────────┬──────┬──────┐
// │ TAB/HYPER │  F1  │  F2  │  F3   │  F4   │ F5  │   │ F6  │    F7     │  F8  │    F9     │ F10  │ BSPC │
// ├───────────┼──────┼──────┼───────┼───────┼─────┤   ├─────┼───────────┼──────┼───────────┼──────┼──────┤
// │   SHIFT   │ Prev │ Next │ Vol - │ Vol + │ P/P │   │  H  │     J     │  ↑   │     L     │  ;   │  '   │
// ├───────────┼──────┼──────┼───────┼───────┼─────┤   ├─────┼───────────┼──────┼───────────┼──────┼──────┤
// │   CTRL    │  Z   │  X   │ Mute  │   V   │  B  │   │  N  │     ←     │  ↓   │     →     │  /   │ ESC  │
// └───────────┴──────┴──────┼───────┼───────┼─────┤   ├─────┼───────────┼──────┼───────────┴──────┴──────┘
//                           │  CMD  │   ▼   │ SPC │   │ RET │     ■     │ ALT  │
//                           └───────┴───────┴─────┘   └─────┴───────────┴──────┘
                        bindings = <
   &trans  &kp F1      &kp F2      &kp F3       &kp F4       &kp F5       &kp F6   &kp F7    &kp F8    &kp F9     &kp F10  &trans
   &trans  &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN &kp C_VOL_UP &kp C_PP     &trans   &trans    &kp UP    &trans     &trans   &trans
   &trans  &trans      &trans      &kp C_MUTE   &trans       &trans       &trans   &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
                                   &trans       &trans       &trans       &trans   &trans    &trans
                        >;
                };

                layer_adjust {
// ┌───────────┬───┬───┬───┬───┬───┐   ┌───┬───┬───┬───┬───┬──────┐
// │ TAB/HYPER │ Q │ W │ E │ R │ T │   │ Y │ U │ I │ O │ P │ BSPC │
// ├───────────┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼──────┤
// │   SHIFT   │ A │ S │ D │ F │ G │   │ H │ J │ K │ L │ ; │  '   │
// ├───────────┼───┼───┼───┼───┼───┤   ├───┼───┼───┼───┼───┼──────┤
// │  BT CLR   │BT0│BT1│BT2│BT3│BT4│   │ N │ M │ , │ . │ / │ ESC  │
// └───────────┴───┴───┼───┼───┼───┤   ├───┼───┼───┼───┴───┴──────┘
//                     │CMD│ ■ │SPC│   │RET│ ■ │ALT│
//                     └───┴───┴───┘   └───┴───┴───┘
                        bindings = <
   &trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
   &trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                                           &trans        &trans        &trans          &trans  &trans  &trans
                        >;
                };
        };
};

